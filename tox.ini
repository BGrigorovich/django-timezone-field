[tox]
envlist =
    py27-django18-sqlite, py32-django18-sqlite, py33-django18-sqlite, py34-django18-sqlite, py35-django18-sqlite,
    py27-django18-postgres, py32-django18-postgres, py33-django18-postgres, py34-django18-postgres, py35-django18-postgres,
    py27-django19-sqlite, py34-django19-sqlite, py35-django19-sqlite,
    py27-django19-postgres, py34-django19-postgres, py35-django19-postgres,
    flake8

[testenv]
commands = {envbindir}/django-admin.py test timezone_field
# changing the default working directory to avoid relative vs.
# absolute import errors when doing unittest discovery.
changedir = {toxworkdir}

# base settings for django18 on sqlite tests
[django18-sqlite]
setenv =
    DJANGO_SETTINGS_MODULE=timezone_field.tests.settings
    TEST_DB_ENGINE=sqlite
deps = django>=1.8,<1.9

# base settings for django18 on postgres tests
[django18-postgres]
setenv =
    DJANGO_SETTINGS_MODULE=timezone_field.tests.settings
    TEST_DB_ENGINE=postgres
deps =
    django>=1.8,<1.9
    psycopg2

# base settings for django19 on sqlite tests
[django19-sqlite]
setenv =
    DJANGO_SETTINGS_MODULE=timezone_field.tests.settings
    TEST_DB_ENGINE=sqlite
deps = django>=1.9,<1.10

# base settings for django19 on postgres tests
[django19-postgres]
setenv =
    DJANGO_SETTINGS_MODULE=timezone_field.tests.settings
    TEST_DB_ENGINE=postgres
deps =
    django>=1.9,<1.10
    psycopg2

[testenv:py27-django18-sqlite]
basepython = python2.7
deps = {[django18-sqlite]deps}
setenv = {[django18-sqlite]setenv}

[testenv:py32-django18-sqlite]
basepython = python3.2
deps = {[django18-sqlite]deps}
setenv = {[django18-sqlite]setenv}

[testenv:py33-django18-sqlite]
basepython = python3.3
deps = {[django18-sqlite]deps}
setenv = {[django18-sqlite]setenv}

[testenv:py34-django18-sqlite]
basepython = python3.4
deps = {[django18-sqlite]deps}
setenv = {[django18-sqlite]setenv}

[testenv:py35-django18-sqlite]
basepython = python3.5
deps = {[django18-sqlite]deps}
setenv = {[django18-sqlite]setenv}

[testenv:py27-django18-postgres]
basepython = python2.7
deps = {[django18-postgres]deps}
setenv = {[django18-postgres]setenv}

[testenv:py32-django18-postgres]
basepython = python3.2
deps = {[django18-postgres]deps}
setenv = {[django18-postgres]setenv}

[testenv:py33-django18-postgres]
basepython = python3.3
deps = {[django18-postgres]deps}
setenv = {[django18-postgres]setenv}

[testenv:py34-django18-postgres]
basepython = python3.4
deps = {[django18-postgres]deps}
setenv = {[django18-postgres]setenv}

[testenv:py35-django18-postgres]
basepython = python3.5
deps = {[django18-postgres]deps}
setenv = {[django18-postgres]setenv}

[testenv:py27-django19-sqlite]
basepython = python2.7
deps = {[django19-sqlite]deps}
setenv = {[django19-sqlite]setenv}

[testenv:py34-django19-sqlite]
basepython = python3.4
deps = {[django19-sqlite]deps}
setenv = {[django19-sqlite]setenv}

[testenv:py35-django19-sqlite]
basepython = python3.5
deps = {[django19-sqlite]deps}
setenv = {[django19-sqlite]setenv}

[testenv:py27-django19-postgres]
basepython = python2.7
deps = {[django18-postgres]deps}
setenv = {[django18-postgres]setenv}

[testenv:py34-django19-postgres]
basepython = python3.4
deps = {[django19-postgres]deps}
setenv = {[django19-postgres]setenv}

[testenv:py35-django19-postgres]
basepython = python3.5
deps = {[django19-postgres]deps}
setenv = {[django19-postgres]setenv}

[testenv:flake8]
deps = flake8
commands = {envbindir}/flake8 {toxinidir}/timezone_field

[testenv:coverage]
# The coverage results have to be copied back to the directory root
# so coveralls can find them.
# Doing that with python so we only use things inside the venv.
commands =
    coverage erase
    coverage run --include='*/timezone_field/*' --omit=*/test*.py {envbindir}/django-admin.py test timezone_field
    python -c "import os; os.rename('.coverage', '{toxinidir}/.coverage');"
deps =
    coverage
    {[django18-sqlite]deps}
setenv = {[django18-sqlite]setenv}
